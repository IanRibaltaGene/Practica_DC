##
##Students: Alex Pelegrina, Ian Ribalta Gen√©
##Subject: Distributed Computing
##

##Docker comands:
##Check docker correct: docker-compose config
##Run docker-compose: docker-compose up
##Bring down dockers: docker-compose down
##Check dockers: docker ps

version: "3.9"
services:

########Mosquitto Broker
  mosquitto:
    container_name: mosquitto
    image: eclipse-mosquitto:1.6.12
    restart: always
    volumes:
      - .\mosquittoBroker\config:/mosquitto/config
      - .\mosquittoBroker\config\mosquitto.conf:/mosquitto/config/mosquitto.conf
      - mosquitto_data:/mosquitto/data
      - .\mosquittoBroker\log:/mosquitto/log
      ## If linux:
      # - ./mosquittoBroker/config:/mosquitto/config
      # - ./mosquittoBroker/config/mosquitto.conf:/mosquitto/config/mosquitto.conf
      # - mosquitto_data:/mosquitto/data
      # - ./mosquittoBroker/log:/mosquitto/log
    ports:
      - 1883:1883
      - 9001:9001

####################KAFKA
  zookeeper:
    image: confluentinc/cp-zookeeper:6.1.1
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
  kafka:
    image: confluentinc/cp-kafka:6.1.1
    depends_on:
      - zookeeper
    container_name: kafka
    ports: 
      - 9092:9092
    expose:
      - '29092'
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      TOPIC_AUTO_CREATE: False
  
  init-kafka-topics:
    image: confluentinc/cp-kafka:6.1.1
    depends_on:
      - kafka
    entrypoint: [ '/bin/sh', '-c' ]
    command: |
      "
      # blocks until kafka is reachable
      kafka-topics --bootstrap-server kafka:29092 --list

      echo -e 'Creating kafka topics'
      kafka-topics --bootstrap-server kafka:29092 --create --if-not-exists --topic analytics --replication-factor 1 --partitions 1
      kafka-topics --bootstrap-server kafka:29092 --create --if-not-exists --topic analytics_results --replication-factor 1 --partitions 1

      echo -e 'Successfully created the following topics:'
      kafka-topics --bootstrap-server kafka:29092 --list
      "


####################Cloud service: MQTT subscriber, Kafka prod and sub, prod to DDBB 
  cloud-service:
    container_name: cloud-service
    build: cloud
    depends_on:
      mosquitto:
        condition: service_started
      database:
        condition: service_started
      init-kafka-topics:
        condition: service_completed_successfully      
    ports:
      - 9090:80
    links:
      - database

#########Database timebased influxdb
  database:
    container_name: temperatureDataBase
    image: influxdb:latest
    ports:
      - 8086:8086
    volumes:
      - influx_data:/var/lib/influxdb2:rw
    environment:
      - DOCKER_INFLUXDB_INIT_MODE=setup
      - DOCKER_INFLUXDB_INIT_USERNAME=usuari
      - DOCKER_INFLUXDB_INIT_PASSWORD=123456789
      - DOCKER_INFLUXDB_INIT_ORG=practica
      - DOCKER_INFLUXDB_INIT_BUCKET=dc_practica
      - DOCKER_INFLUXDB_INIT_RETENTION=1w
      - DOCKER_INFLUXDB_INIT_ADMIN_TOKEN=ea612f89eb7e81633fc28bffd098897c


##########MQTT producer
  iot-gateway:
    build: iot-gateway
    depends_on:
      - mosquitto
      - cloud-service

##########Analytics module
  analytics_module:
    build: analytics_module
    depends_on:
      init-kafka-topics:
        condition: service_completed_successfully  

volumes:
  zookeeper_data:
    driver: local
  kafka_data:
    driver: local
  influx_data:
  mosquitto_data: